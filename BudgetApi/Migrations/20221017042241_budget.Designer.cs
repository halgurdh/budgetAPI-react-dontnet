// <auto-generated />
using System;
using BudgetApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetApi.Migrations
{
    [DbContext(typeof(BudgetDBContext))]
    [Migration("20221017042241_budget")]
    partial class budget
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BudgetApi.Data.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryID = new Guid("6820cbeb-ccd5-4c85-99f9-2547185d16d4"),
                            Name = "Rent"
                        },
                        new
                        {
                            CategoryID = new Guid("0a6a6fc1-6f93-4e81-b3a3-bfebdb7a3857"),
                            Name = "Salary"
                        },
                        new
                        {
                            CategoryID = new Guid("faf74050-74b9-449f-a817-11b30078dc2f"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("BudgetApi.Data.Expenses", b =>
                {
                    b.Property<Guid>("ExpensesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("ExpensesID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BudgetApi.Data.Income", b =>
                {
                    b.Property<Guid>("IncomeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("IncomeID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("BudgetApi.Data.Total", b =>
                {
                    b.Property<Guid>("TotalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("TotalID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Total");
                });

            modelBuilder.Entity("BudgetApi.Data.Expenses", b =>
                {
                    b.HasOne("BudgetApi.Data.Category", null)
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BudgetApi.Data.Income", b =>
                {
                    b.HasOne("BudgetApi.Data.Category", null)
                        .WithMany("Income")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BudgetApi.Data.Total", b =>
                {
                    b.HasOne("BudgetApi.Data.Category", null)
                        .WithMany("Total")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BudgetApi.Data.Category", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Income");

                    b.Navigation("Total");
                });
#pragma warning restore 612, 618
        }
    }
}
